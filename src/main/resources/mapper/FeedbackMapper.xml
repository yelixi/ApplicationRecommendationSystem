<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.dao.FeedbackMapper">
  <resultMap id="BaseResultMap" type="com.example.demo.entity.Feedback">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="open_id" jdbcType="INTEGER" property="openId" />
    <result column="detail" jdbcType="VARCHAR" property="detail" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="tel_number" jdbcType="VARCHAR" property="telNumber" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, open_id, detail, name, tel_number, user_id, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from feedback
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from feedback
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.demo.entity.Feedback">
    insert into feedback (id, open_id, detail, 
      name, tel_number, user_id, 
      update_time)
    values (#{id,jdbcType=INTEGER}, #{openId,jdbcType=INTEGER}, #{detail,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{telNumber,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.entity.Feedback">
    insert into feedback
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="openId != null">
        open_id,
      </if>
      <if test="detail != null">
        detail,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="telNumber != null">
        tel_number,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="openId != null">
        #{openId,jdbcType=INTEGER},
      </if>
      <if test="detail != null">
        #{detail,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="telNumber != null">
        #{telNumber,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.entity.Feedback">
    update feedback
    <set>
      <if test="openId != null">
        open_id = #{openId,jdbcType=INTEGER},
      </if>
      <if test="detail != null">
        detail = #{detail,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="telNumber != null">
        tel_number = #{telNumber,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.entity.Feedback">
    update feedback
    set open_id = #{openId,jdbcType=INTEGER},
      detail = #{detail,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      tel_number = #{telNumber,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>